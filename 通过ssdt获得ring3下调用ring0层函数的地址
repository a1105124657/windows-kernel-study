windbg dd KeServiceDescriptorTable后
kd>  dd KeServiceDescriptorTable
83f809c0  83e94d9c 00000000 00000191 83e953e4
83f809d0  00000000 00000000 00000000 00000000
83f809e0  83ef36af 00000000 02e22865 000000bb
83f809f0  00000011 00000100 5385d2ba d717548f
83f80a00  83e94d9c 00000000 00000191 83e953e4
83f80a10  92ad6000 00000000 00000339 92ad702c
83f80a20  00000000 00000000 83f80a24 00000340
83f80a30  00000340 855f8c10 00000007 00000000

指针83e94d9c指向ssdt表,ssdt相当于一个巨大的数组

kd> dd 83e94d9c
83e94d9c  84090c28 83ed740d 84020b68 83e3b88a
83e94dac  840924ff 83f143fa 84102b05 84102b4e
83e94dbc  840153bd 8411c368 8411d5c1 8400bb95
83e94dcc  8409cb35 840f5963 84048a56 840186cc
83e94ddc  83fae928 840e7898 83fff14e 84041a62
83e94dec  8408ddf1 83fef238 8408d1fe 8400cc0c
83e94dfc  8409e5bc 8400f28f 8409e39c 84096afc
83e94e0c  840210f0 840e2657 84093ec9 8409e7ee

这里都是ring3下调用函数后再调用的ring0层的函数的地址

如win7 32位下的nt!openprocess 系统调用的服务号位0beh,
那么(83e94d9c+0be*4)=(83e95094)指针指向的就是函数的地址

kd> dd 83e95094
83e95094  840299dc 8407bfff 84069b37 83f950c7
83e950a4  84081674 83ffd0c6 8409e977 84065b6f
83e950b4  84075d87 840902e4 84069c4e 84121e0f
83e950c4  8410a6f1 8410b989 83ffb506 84058970
83e950d4  8410a2a2 84109fc2 8410a35a 8410a07a
83e950e4  8400e93f 83fddf60 83ff8a51 8410c0e4
83e950f4  8410c1aa 8405a403 840ab5a7 8406f9a1
83e95104  8411ca3e 8411ce83 83edad34 8408eb8c

840299dc就是函数的地址

kd> u 840299dc
nt!NtOpenProcess:
840299dc 8bff            mov     edi,edi
840299de 55              push    ebp
840299df 8bec            mov     ebp,esp
840299e1 51              push    ecx
840299e2 51              push    ecx
840299e3 64a124010000    mov     eax,dword ptr fs:[00000124h]
840299e9 8a803a010000    mov     al,byte ptr [eax+13Ah]
840299ef 8b4d14          mov     ecx,dword ptr [ebp+14h]

就是ring0层的NtOpenProcess



